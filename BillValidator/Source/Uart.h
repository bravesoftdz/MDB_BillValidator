
/*
*****************************************************************************
**
**      Project     : KAWE_76032
**
**      Component   : UART (LPC1225)
**
**      Modulename  : PUBLIC
**
**      Filename    : Uart.h
**
**      Abstract    : This is the uart driver header file for the RXT real time chip 
**                    module.
**
**      Compiler    : KEIL C compiler
**
**      Date        : 2012-11-16 16:31:15
**
**      License no. : 9538-154-209-9667     Frank Tsang
**
**      Warning     : This file has been automatically generated.
**                    Do not edit this file if you intend to regenerate it.
**
**      This device driver was created by IAR MakeApp version 
**      4.10C (Atmel megaAVR: 4.00B) for the Atmel megaAVR series of
**      microcontrollers.
**
**      (c)Copyright 2003 IAR Systems.
**      Your rights to this file are explained in the IAR MakeApp 
**      License Agreement. All other rights reserved.
**
*****************************************************************************
*/

/*
**===========================================================================
**  1       GENERAL
**  1.1     Revisions
**
**  Please read the IAR MakeApp for Atmel megaAVR readme file 
**  V1.0
**
**===========================================================================
*/

/*
**===========================================================================
**  1.2     References
** 
**  No   Identification          Name or Description
**  ==   ===================     ================================
**  
** 
**===========================================================================
*/

/*
**===========================================================================
**  1.3     Re-definition guard
**===========================================================================
*/

/*--- Avoid including this file more than once ---*/
#ifndef _IS_INCLUDED_UART_H_
#define _IS_INCLUDED_UART_H_

/*
**===========================================================================
**  2.      INCLUDE FILES
**  2.1     Standard include files
**===========================================================================
*/
#include <lpc12xx.h>
#include <core_cm0.h>
#include <lpc_types.h>
#include <stdlib.h>
#include <stdio.h>
	
#include <RTL.h> 
//#include "RT_Agent.h"
//#include "RTX_Libs.h"
	

/*
**===========================================================================
**  2.2     Application include files
**===========================================================================
*/


//#include "typedef.h"


/*
**===========================================================================
**  3.      DECLARATIONS
**  3.1     Global constants
**===========================================================================
*/

#define	MDBSLAVE_BUFFSIZE	36


enum
{
	UART_IDLE,
	UART_RX,
	UART_WAIT,
	UART_TX,
};

#if 0
enum
{
	UART_IDLE,
	UART_RX_ADDRESS,
	UART_RX_DATA,
	UART_WAIT
};
#endif

#if 1
enum
{
	WM_SLV_VTS_HST_MDB = 0,
	WM_SLV_232_HST_MDB,
	WM_SLV_MDB_HST_232,
	WM_SLV_VTS_HST_232
};
#endif

enum
{
	ACK	= 0x00,
	NAK	= 0xFF,
	RET	= 0xAA,
};


#define	MDBCMD_CASHLESS_BASE				0x10	// Cashless device address #1
//#define	MDBCMD_CASHLESS_BASE				0x60       // Cashless device address #2 for Baixue GFV by DJI @20160411

#define	MDBCMD_CASHLESS_RESET				MDBCMD_CASHLESS_BASE
#define	MDBCMD_CASHLESS_SETUP				(MDBCMD_CASHLESS_BASE + 1)
#define	MDBCMD_CASHLESS_POLL				(MDBCMD_CASHLESS_BASE + 2)
#define	MDBCMD_CASHLESS_VEND				(MDBCMD_CASHLESS_BASE + 3)
#define	MDBCMD_CASHLESS_READER				(MDBCMD_CASHLESS_BASE + 4)
#define	MDBCMD_CASHLESS_REVALUE				(MDBCMD_CASHLESS_BASE + 5)
#define	MDBCMD_CASHLESS_EXPASION			(MDBCMD_CASHLESS_BASE + 7)

enum
{
	MDBSUB_VEND_REQUEST				= 0,
	MDBSUB_VEND_CANCEL,
	MDBSUB_VEND_SUCCESS,
	MDBSUB_VEND_FAILURE,
	MDBSUB_SESSION_COMPLETE,
	MDBSUB_CASH_SALE,
	MDBSUB_NEGATIVE_VEND_REQUEST
};


enum
{
	MDBSUB_REQUEST_ID				= 0,
	MDBSUB_READ_USER_FILE,
	MDBSUB_WRITE_USER_FILE,
	MDBSUB_WRITE_TIME,
};

enum
{
	MDBSUB_READER_DISABLE			= 0,
	MDBSUB_READER_ENABLE,
	MDBSUB_READER_CANCEL,
};

enum
{
	MDBSUB_REVALUE_REQUEST			= 0,
	MDBSUB_REVALUE_LIMIT,
};


enum
{
	WS_INACTIVE,
	WS_DISABLED,
	WS_ENABLED,
	WS_SESSIONIDLE,
	WS_VEND_BEGIN,
	WS_VEND_APPROVED,
	WS_VEND_DENIED,	//WS_VEND_ERROR,
	WS_VEND_SUCCESS,
	WS_VEND_FAILURE,
	WS_REFUND_SUCCESS,
	WS_REFUND_FAILURE,//WS_MULFUNCTION,	
	WS_NEGATIVE,
	WS_REVALUE,
	WS_SESSIONCOMPLETE, //added by DJI for session complete
	WS_SESSION_CANCEL,
	WS_NETWORK_FAILED//added by DJI for network failed
}; //MDB work state

enum
{
	COMHOST_RESET 		= 0,			// 复位中
	COMHOST_DISABLE,					// 复位结束，禁止刷卡
	COMHOST_ENABLE,						// 允许刷卡，空闲待机
	COMHOST_SESSION_IDLE,				// 用户已刷卡
	COMHOST_SESSION_BEGIN,				// 交易中
	COMHOST_VEND_APPROVED,				// 扣款成功		COMHOST_SESSION_OK
	COMHOST_VEND_SUCCESS,				// 交易成功 	COMHOST_SESSION_OK
	COMHOST_VEND_FAILURE,				// 交易失败		COMHOST_SESSION_FAIL
	//COMHOST_POWERUP		= 0xFF,
	COMHOST_CANCEL
};

enum
{
	EVT_TIME_OVER 	= 0x0001,
	EVT_RX_READY	= 0x0002,
};

/*
**===========================================================================
**  3.2     Global macros
**===========================================================================
*/








/*
**===========================================================================
**  3.3     Global type definitions
**===========================================================================
*/

#if 0
typedef struct 
{
  	OS_TID 		task;
  	OS_ID  		timer;
  	T_TIK  		initial_period;
  	T_TIK  		cycle_time;
  	T_SEM   	sema;
	U16			updateFlag;
  	U32    		timVal;
  	U16    		info;	//ndx;     the info parameter in os_tmr_call()
} T_TMR;		// type of system timer
#endif


typedef struct
{
	U8	Data[36];	
	U8  Index;
	U8	Fcc;
}T_UART_RX;
 

typedef struct
{
	U8	Data[36];	
	U8  InPos;
	U8	OutPos;
	U8	OutLen;
	U8	Fcc;
}T_UART_TX;
 

typedef struct
{
	U8	Config;	
	U8  Level;
	U8	Country_Hi;
	U8	Country_Lo;
	U8	Scale;
	U8	Decimal;
	U8	RespTime;
	U8	Option;		// Misellaneous 
}T_CONFIG;
 


/*
**===========================================================================
**  3.4     Global variables (defined in some implementation file)
**===========================================================================
*/
#ifdef	_IS_INCLUDED_UART_C_
	#define	PUBLIC
#else
	#define	PUBLIC	extern
#endif


//PUBLIC		T_TMR 			TmrArray[SUM_TMR];

//PUBLIC 				U8	p8_MdbSlave_RxBuff[MDBSLAVE_BUFFSIZE];
//PUBLIC 	volatile	U8	u8_MdbSlave_RxIndex;
//PUBLIC 	volatile	U8	u8_MdbSlave_RxFcc;
PUBLIC 	volatile	U8	u8_Uart0_State;

PUBLIC 	volatile	U8	u8_Uart1_State;
PUBLIC 	volatile	U8	u8_ComHost_State;

//PUBLIC 				U8	p8_MdbSlave_TxBuff[MDBSLAVE_BUFFSIZE];
//PUBLIC 	volatile	U8	u8_MdbSlave_TxIndex;
//PUBLIC 	volatile	U8	u8_MdbSlave_TxFcc;

PUBLIC	T_UART_RX 	Uart0RxBuff;
PUBLIC	T_UART_TX 	Uart0TxBuff;

PUBLIC	T_UART_RX 	Uart1RxBuff;
PUBLIC	T_UART_TX 	Uart1TxBuff;


PUBLIC	T_CONFIG	pCashlessSetup;

PUBLIC	volatile	U8	u8_WorkMode;	// SEL0 & SEL1

//PUBLIC	U8 p8_TempBuff[300];
//PUBLIC	volatile U16 u16_TempIndex;

PUBLIC	volatile U16 u16_Counter1;
PUBLIC	volatile U16 u16_Counter2;
PUBLIC	volatile U16 u16_Counter3;

PUBLIC	volatile U8 u8_GlobalRBR;

PUBLIC	volatile U8 u8_MdbSlave_State; // the state machine of the cashless device
PUBLIC	volatile U8 u8_MdbAddr_Mode; //Add 0x10 for SL machine, Add 0x60 for vending machine with Nayax Amit //added by DJI @20160411
PUBLIC   volatile U8 u8_DecimalPoint_Mode;//added by DJI @20160523
/*
**===========================================================================
**  4.      GLOBAL FUNCTIONS (defined in some implementation file)
**===========================================================================
*/
PUBLIC  void MDB_Decimal_Place_Init(void);//added by DJI @20160523
PUBLIC   void MDB_Address_Mode_Init(void);//added by DJI @20160411
PUBLIC	void Uart_Mode_Init(void);

PUBLIC	void Uart0_BuffSetChar(U8 u8_Data);
PUBLIC	void Uart0_BuffAddChar(U8 u8_Data);
PUBLIC	void Uart0_BuffSend(void);
PUBLIC	void ComHost_Rx(U8 u8_RBR);	// , BOOL bl_Bit9)
PUBLIC	void ComHost_Send(U8 * p8_Code, U8 u8_Length);
PUBLIC	void MdbSlave_Response(U8 u8_Code);
PUBLIC	void MdbSlave_Responses(void * p8_Code, U8 u8_Length);
PUBLIC	void UART0_Int_Tx(void);
PUBLIC	void MdbSlave_Rx(U8 u8_RBR, BOOL bl_Bit9);
PUBLIC	BOOL MdbSlave_CheckFcc(void);
PUBLIC	BOOL ComHost_CheckFcc(void);
PUBLIC	void UART_IRQHandler_MdbSlave(void);
PUBLIC	void UART_IRQHandler_ComHost(void);
PUBLIC	void UART0_IRQHandler(void);
PUBLIC	void UART1_IRQHandler(void);
PUBLIC	void Cashless_SetupConfig_Init(void);
PUBLIC	void Cashless_RequestId_Init(void);
PUBLIC	void Cashless_BeginSession_Init(void);

PUBLIC	void Uart_Init_VtsSlave(void);
PUBLIC	void Uart_Init_ComHost(void);
PUBLIC	void Uart_Init_ComSlave(void);
PUBLIC	void Uart_Init_MdbHost(void);
PUBLIC	void Uart_Init_MdbSlave(void);




#undef	PUBLIC

#endif /* Match the re-definition guard */


/*
**===========================================================================
** END OF FILE
**===========================================================================
*/ 

